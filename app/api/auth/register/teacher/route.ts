import { NextRequest, NextResponse } from 'next/server'\nimport { createClient } from '@/lib/supabase/server'\nimport { cookies } from 'next/headers'\nimport { db } from '@/lib/database'\nimport { users } from '@/lib/database'\nimport bcrypt from 'bcrypt'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { email, password, firstName, lastName } = await request.json()\n    \n    if (!email || !password) {\n      return NextResponse.json(\n        { message: \"Email and password are required\" },\n        { status: 400 }\n      )\n    }\n\n    const cookieStore = cookies()\n    const supabase = createClient(cookieStore)\n    \n    // Sign up with Supabase Auth\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          firstName,\n          lastName,\n          role: 'teacher'\n        }\n      }\n    })\n\n    if (error) {\n      return NextResponse.json(\n        { message: error.message },\n        { status: 400 }\n      )\n    }\n\n    if (data.user) {\n      // Create user profile in our database\n      await db.insert(users).values({\n        id: data.user.id,\n        email: data.user.email!,\n        role: 'teacher',\n        firstName,\n        lastName,\n        emailVerified: true,\n        accountApproved: true,\n        isActive: true\n      })\n    }\n\n    return NextResponse.json(\n      { message: \"Teacher registered successfully\", userId: data.user?.id },\n      { status: 201 }\n    )\n  } catch (error) {\n    console.error(\"Teacher registration error:\", error)\n    return NextResponse.json(\n      { message: \"Internal server error\" },\n      { status: 500 }\n    )\n  }\n}"
import { NextRequest, NextResponse } from 'next/server'\nimport { createClient } from '@/lib/supabase/server'\nimport { cookies } from 'next/headers'\nimport { db, users } from '@/lib/database'\nimport { eq } from 'drizzle-orm'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { email, password } = await request.json()\n\n    if (!email || !password) {\n      return NextResponse.json(\n        { message: \"Email and password are required\" },\n        { status: 400 }\n      )\n    }\n\n    const cookieStore = cookies()\n    const supabase = createClient(cookieStore)\n    \n    // Sign in with Supabase Auth\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    })\n\n    if (error) {\n      return NextResponse.json(\n        { message: \"Invalid credentials\" },\n        { status: 401 }\n      )\n    }\n\n    // Get user profile from our database\n    const [userProfile] = await db\n      .select()\n      .from(users)\n      .where(eq(users.id, data.user.id))\n      .limit(1)\n\n    if (!userProfile || userProfile.role !== 'teacher') {\n      return NextResponse.json(\n        { message: \"Invalid credentials\" },\n        { status: 401 }\n      )\n    }\n\n    // Update last login\n    await db\n      .update(users)\n      .set({ lastLogin: new Date() })\n      .where(eq(users.id, userProfile.id))\n\n    return NextResponse.json({\n      user: {\n        id: userProfile.id,\n        email: userProfile.email,\n        firstName: userProfile.firstName,\n        lastName: userProfile.lastName,\n        role: userProfile.role,\n        profileImageUrl: userProfile.profileImageUrl\n      }\n    })\n  } catch (error) {\n    console.error(\"Teacher login error:\", error)\n    return NextResponse.json(\n      { message: \"Internal server error\" },\n      { status: 500 }\n    )\n  }\n}"